apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-test-script
  namespace: default
data:
  test.sh: |
    #!/bin/sh
    set -e

    echo "=== S3/MinIO Compatibility Test ==="
    echo

    # Test configuration
    ENDPOINT="http://minio.minio.svc.cluster.local:9000"
    BUCKET="test-s3-compat"
    ACCESS_KEY="minioadmin"
    SECRET_KEY="minioadmin123"

    # Configure AWS CLI for MinIO
    export AWS_ACCESS_KEY_ID=$ACCESS_KEY
    export AWS_SECRET_ACCESS_KEY=$SECRET_KEY
    export AWS_DEFAULT_REGION=us-east-1

    echo "1. Testing connection to MinIO..."
    aws --endpoint-url=$ENDPOINT s3 ls s3://$BUCKET/ || true
    echo "✅ Connection successful"
    echo

    echo "2. Testing Upload..."
    echo "Hello MinIO from test!" > /tmp/test-file.txt
    aws --endpoint-url=$ENDPOINT s3 cp /tmp/test-file.txt s3://$BUCKET/test/test-file.txt \
      --metadata test-key=test-value,source=compatibility-test
    echo "✅ Upload successful"
    echo

    echo "3. Testing Exists (List)..."
    aws --endpoint-url=$ENDPOINT s3 ls s3://$BUCKET/test/
    echo "✅ File exists"
    echo

    echo "4. Testing Download..."
    aws --endpoint-url=$ENDPOINT s3 cp s3://$BUCKET/test/test-file.txt /tmp/downloaded.txt
    CONTENT=$(cat /tmp/downloaded.txt)
    if [ "$CONTENT" = "Hello MinIO from test!" ]; then
      echo "✅ Download successful: $CONTENT"
    else
      echo "❌ Download failed: content mismatch"
      exit 1
    fi
    echo

    echo "5. Testing Metadata..."
    aws --endpoint-url=$ENDPOINT s3api head-object \
      --bucket $BUCKET \
      --key test/test-file.txt \
      | grep -i metadata
    echo "✅ Metadata retrieved"
    echo

    echo "6. Testing Multiple Uploads for List..."
    for i in 1 2 3; do
      echo "File $i content" > /tmp/file-$i.txt
      aws --endpoint-url=$ENDPOINT s3 cp /tmp/file-$i.txt s3://$BUCKET/test/file-$i.txt
    done
    echo "✅ Multiple uploads successful"
    echo

    echo "7. Testing List..."
    FILE_COUNT=$(aws --endpoint-url=$ENDPOINT s3 ls s3://$BUCKET/test/ | wc -l)
    if [ $FILE_COUNT -ge 4 ]; then
      echo "✅ List successful: found $FILE_COUNT files"
      aws --endpoint-url=$ENDPOINT s3 ls s3://$BUCKET/test/
    else
      echo "❌ List failed: expected at least 4 files, got $FILE_COUNT"
      exit 1
    fi
    echo

    echo "8. Testing Delete..."
    aws --endpoint-url=$ENDPOINT s3 rm s3://$BUCKET/test/test-file.txt
    aws --endpoint-url=$ENDPOINT s3 rm s3://$BUCKET/test/file-1.txt
    aws --endpoint-url=$ENDPOINT s3 rm s3://$BUCKET/test/file-2.txt
    aws --endpoint-url=$ENDPOINT s3 rm s3://$BUCKET/test/file-3.txt

    # Verify deletion
    if aws --endpoint-url=$ENDPOINT s3 ls s3://$BUCKET/test/test-file.txt 2>/dev/null; then
      echo "❌ Delete failed: file still exists"
      exit 1
    else
      echo "✅ Delete successful"
    fi
    echo

    echo "🎉 All S3/MinIO compatibility tests passed!"
---
apiVersion: v1
kind: Pod
metadata:
  name: s3-compat-test
  namespace: default
spec:
  restartPolicy: Never
  containers:
  - name: test
    image: amazon/aws-cli:latest
    command: ["/bin/sh", "/scripts/test.sh"]
    volumeMounts:
    - name: scripts
      mountPath: /scripts
  volumes:
  - name: scripts
    configMap:
      name: s3-test-script
      defaultMode: 0755
